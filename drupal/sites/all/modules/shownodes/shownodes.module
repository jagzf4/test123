<?php
/**
 * @file
 * This is the main module file.
 */

/**
 * Implements hook_help().
 */
function shownodes_install(){
		$ourFileName = drupal_get_path('theme', 'skanem').'/templates/historytimeline.tpl.php';
		$ourFileHandle = fopen($ourFileName, 'w');
		fclose($ourFileHandle);
}

function shownodes_help($path, $arg) {

  if ($path == 'admin/help#shownodes') {
    $output = '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('The shownodes module allows the Administrator to display various types of nodes as a block on your Drupal site.') . '</p>';
    return $output;
  }
}

/**
* Implementation of hook_menu().
*/
function shownodes_theme(){
	 $themes = array (
        'shownodes_historytimeline_template' => array(
        	'variables'=>array('data' => NULL, 'path' => NULL),
            'template' => 'historytimeline', // your template file called custompage.tpl.php
            'path'=>drupal_get_path('theme', 'skanem').'/templates',
        ),
    );
    return $themes;
}

function shownodes_menu() {

  $items['admin/config/shownodes'] = array(
  'title' => t('Assign Content Type to Blocks'),
  'description' => t('You can select which node types you want to show'),
  'page callback' => 'system_admin_menu_block_page',
  'access arguments' => array('administer site configuration'),
  'file' => 'system.admin.inc',
  'file path' => drupal_get_path('module', 'system'),
  );
  
  $items['admin/config/shownodes/settings'] = array(
  'title' => t('Settings'),
  'description' => t('You can select which node types you want to show'),
  'page callback' => 'drupal_get_form',
  'page arguments' => array('shownodes_admin_settings'),
  'access arguments' => array('administer site configuration'),
  'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}

function shownodes_admin_settings() {

  $types = node_type_get_types();
  foreach($types as $node_type) {
    $nodetypes[$node_type->type] = $node_type->name;
  }

  $form['shownodes_nodes_toshow'] = array(
  '#type' => 'checkboxes',
  '#title' => t('Select the nodes to show'),
  '#options' => $nodetypes,
  '#default_value' => variable_get('shownodes_nodes_toshow', array('')),
  '#description' => t('All the node types selected below will be shown'),
  );
  
  return system_settings_form($form);
}

/**
 * Implements hook_block_info().
 */
function shownodes_block_info() {
  $blocks = array();

  $blocks['shownodeblock'] = array(
    'info' => t('A block to show selected content type'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function shownodes_block_view($block_name = '') {
  if ($block_name == 'shownodeblock') {

    //Get the selected node types and create a list of them
    $show_nodes_list = array();
    $show_nodes_array = variable_get('shownodes_nodes_toshow', array(''));
    foreach ($show_nodes_array as $key => $value) {
      if($value) {
          array_push($show_nodes_list,$value);
      }
    }
    
    //Based on the node types create a query and then load the node types
    $query = new EntityFieldQuery();
    $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', $show_nodes_list)
    ->propertyCondition('status', 1)
    ->propertyOrderBy('created', 'DESC');
    
    $result = $query->execute();
    $nodes = array();
    if (isset($result['node'])) {
      $nids = array_keys($result['node']);
      $nodes = node_load_multiple($nids);
    }
    
    //Loop through the loded nodes to create a list
    //Which we will pass to the theme
    $list = array();
    $i=0;

    foreach ($nodes as $node) {
      $options = array('absolute' => TRUE);
      $url = url('node/' . $node->nid, $options);
      $list[$i]['title'] = ''.$node->title.'';
      if(isset($node->body['und']['0']['value'])){
        $list[$i]['body'] = ''.$node->body['und']['0']['value'].'';
      }
      if(isset($node->field_timeline_image['und']['0']['uri'])){
        $list[$i]['image_url'] = ''.$node->field_timeline_image['und']['0']['uri'].'';
      }
      if(isset($node->field_color_class['und']['0']['value'])){
        $list[$i]['color_class'] = ''.$node->field_color_class['und']['0']['value'].'';
      }
      if(isset($node->field_year['und']['0']['value'])){
        $Y_date = explode("-",$node->field_year['und']['0']['value']);
        $list[$i]['date'] = ''.$Y_date[0].'';
      }
      $i++;
    }

    $sortarr = array();
    foreach ($list as $key => $row)
    {
        $sortarr[$key] = $row['title'];
    }
    array_multisort($sortarr, SORT_ASC, $list);
    //echo "<pre/>"; print_r($list); exit;
    //Return the content of the block
    /*$theme_args = array('items' => $list);
    $content = theme('item_list', $theme_args);*/

    $block = array(
      'subject' => t('Show Nodes Block'),
      'content' => theme('shownodes_historytimeline_template', array('data' => $list)),
    );
    //echo "<pre/>"; print_r($block); exit;
    return $block;
  }
}